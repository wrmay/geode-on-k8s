---
- hosts: ['datanodes','locators']
  # vars:
  #   ansible_ssh_user: ec2-user
  tasks:
    - name: install required software
      become: yes
      yum:
        name: ['java-1.8.0-openjdk-devel.x86_64', 'nc', 'git','lsof']

    - name: disable iptables
      become: yes
      service:
        name: iptables
        enabled: no
        state: stopped

    - name: increase nproc soft limit
      become: yes
      pam_limits:
        domain: "{{ ansible_ssh_user }}"
        limit_item: nproc
        limit_type: soft
        value: 8192

    - name: increase nproc hard limit
      become: yes
      pam_limits:
        domain: "{{ ansible_ssh_user }}"
        limit_item: nproc
        limit_type: hard
        value: 81920

    - name: increase somaxcon
      become: yes
      sysctl:
        name: net.core.somaxconn
        value: 1280

    - name: disable syn cookies
      become: yes
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: 0

    - name: download and unpack GemFire 9.3
      become: no
      unarchive:
        remote_src: yes
        src: http://download.pivotal.com.s3.amazonaws.com/gemfire/9.3.0/pivotal-gemfire-9.3.0.zip
        dest: /runtime
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: create GemFire symbolic link
      become: no
      file:
        path: /runtime/gemfire
        src: /runtime/pivotal-gemfire-9.3.0
        state: link
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: download and unpack Maven
      become: no
      unarchive:
        remote_src: yes
        src:  http://apache.cs.utah.edu/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz
        dest: /runtime
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: create Maven symbolic link
      become: no
      file:
        path: /runtime/maven
        src: /runtime/apache-maven-3.6.0
        remote_src: yes
        state: link
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: configure the bash profile
      become: no
      copy:
        src: setuptasks/ConfigureProfile/bash_profile
        dest: /home/{{ ansible_ssh_user }}/.bash_profile
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: configure maven
      become: no
      copy:
        src: setuptasks/ConfigureMaven/settings.xml
        dest: /home/{{ ansible_ssh_user }}/.m2/
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: git clone  gemfire-manager
      become: no
      git:
        repo: https://github.com/Pivotal-Data-Engineering/gemfire-manager
        clone: yes
        version: 2.1
        recursive: no
        depth: 1
        dest: /runtime/gemfire-manager

    - name: setup the cluster working directories
      become: no
      copy:
        src: cluster.json
        dest: /runtime/gem_cluster_1/
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: copy gemfire-manager scripts to cluster working directory
      become: no
      copy:
        src: /runtime/gemfire-manager/{{ item }}
        remote_src: yes
        dest: /runtime/gem_cluster_1/
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
      loop: ['gf.py', 'cluster.py', 'clusterdef.py', 'gemprops.py']

    - name: git clone  gemfire-toolkit
      become: no
      git:
        repo: https://github.com/Pivotal-Data-Engineering/gemfire-toolkit
        clone: yes
        version: gemfire-toolkit-2.1
        recursive: no
        depth: 1
        dest: /runtime/gemfire-toolkit

    - name: build gemfire-toolkit
      become: no
      command: /runtime/maven/bin/mvn package
      args:
        chdir: /runtime/gemfire-toolkit

    - name: install gemfire-toolkit
      become: no
      unarchive:
        remote_src: yes
        src:  /runtime/gemfire-toolkit/target/gemfire-toolkit-2.1-runtime.tar.gz
        dest: /runtime/gem_cluster_1
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"

    - name: copy keypair to cluster home
      become: no
      copy:
        src:  yak-keypair.pem
        dest: /runtime/gem_cluster_1
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: 0600

    - name: copy SSL files to cluster home
      become: no
      copy:
        src:  "{{ item }}"
        dest: /runtime/gem_cluster_1/{{ item }}
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
      loop: ['gfsecurity.properties','trusted.keystore']
